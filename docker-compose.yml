version: "3"

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedByDefault=false # Exclude all containers (they will be enabled with label "traefik.enable=true")

      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Enable ACME (Let's Encrypt): automatic SSL.

      # Email address used for registration.
      # Required
      - --certificatesresolvers.myresolver.acme.email=redrem@gmail.com

      # File or key used for certificates storage.
      # Required
      - --certificatesresolvers.myresolver.acme.storage=acme.json

      # EntryPoint to use for the HTTP-01 challenges.
      # Required
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=http

      # DNS provider used.
      # Required
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=digitalocean

    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json
    labels:
      - "traefik.enable=true"

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.services.whoami-service.loadbalancer.server.port=80 # To test LB just call mutiples times whoami.localhost
    deploy:
      mode: replicated
      replicas: 2

  echotest:
    # A container that exposes an API to show its IP address
    image: echotest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.echo.rule=Host(`echo.localhost`)"
      - "traefik.http.services.echo-service.loadbalancer.server.port=80"
      - "traefik.http.services.echo-service.loadbalancer.healthcheck.path=status"
      - "traefik.http.services.echo-service.loadbalancer.healthcheck.interval=15"
      # - traefik.http.routers.echo.tls=true
      # - traefik.http.routers.echo.tls.certresolver=myresolver
    deploy:
      mode: replicated
      replicas: 2
